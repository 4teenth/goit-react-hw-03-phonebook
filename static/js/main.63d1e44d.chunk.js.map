{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/PhonebookForm/PhonebookForm.module.css","components/PhonebookForm/PhonebookForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js","components/ContactFilter/ContactFilter.module.css"],"names":["module","exports","form","styles","input","inputLabel","addBtn","PhonebookForm","state","name","props","number","nameId","shortid","generate","numberId","handleChange","e","target","value","setState","handleSubmit","preventDefault","isNaN","alert","onAddContact","this","className","onSubmit","htmlFor","type","placeholder","onChange","id","required","Component","defaultProps","contactListItem","contactBtn","ContactListItem","onDeleteContact","key","onClick","contactList","ContactList","contacts","map","titleForm","inputForm","ContactFilter","onChangeFilter","section","sectionTitle","Section","title","children","Notification","msg","App","filter","addContact","newContact","theContact","uuidv4","some","contact","prevState","deleteContact","contactId","changeFilter","getContactsByFilter","toLowerCase","includes","savedContacts","localStorage","getItem","JSON","parse","prevProps","stringify","contactsWithFilter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63d1e44d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2oyS4\",\"contactListItem\":\"ContactList_contactListItem__tdz5b\",\"contactBtn\":\"ContactList_contactBtn__29N4A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2GZaV\",\"sectionTitle\":\"Section_sectionTitle__2KHpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhonebookForm_form__34dbJ\",\"input\":\"PhonebookForm_input__1U-EF\",\"inputLabel\":\"PhonebookForm_inputLabel__2GTA1\",\"addBtn\":\"PhonebookForm_addBtn__22LlL\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport styles from './PhonebookForm.module.css';\n\nconst { form, input, inputLabel, addBtn } = styles;\n\nexport default class PhonebookForm extends Component {\n  static defaultProps = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: this.props.name,\n    number: this.props.number,\n  };\n\n  nameId = shortid.generate();\n  numberId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    if (!isNaN(name)) {\n      alert('Invalid Contact Name');\n      return;\n    }\n    if (isNaN(number)) {\n      alert('Invalid Contact Number');\n      return;\n    }\n\n    // const { name, number } = this.state;\n    // this.props.onAddContact(name, number);\n    // OR (was taken the state with all properties)\n    this.props.onAddContact(this.state);\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n    // OR call RESET and use method below, but the same is above\n    // this.reset();\n  };\n\n  // reset = () => {\n  //   this.setState({ name: '', number: '' });\n  // };\n\n  render() {\n    const { name, number } = this.state;\n    // const nameId = shortid.generate();\n    // const numberId = shortid.generate();\n\n    return (\n      <>\n        <form className={form} onSubmit={this.handleSubmit}>\n          <label className={inputLabel} htmlFor={this.nameId}>\n            Name:\n            {/* if put <input> not inside <label> it's more comfortable to write styles for these ones */}\n            <input\n              className={input}\n              type=\"text\"\n              placeholder=\" First/Last name\"\n              value={name}\n              onChange={this.handleChange}\n              name=\"name\"\n              id={this.nameId}\n              required\n              // required - checking the form until sending - https://developer.mozilla.org/ru/docs/Learn/HTML/Forms/%D0%92%D0%B0%D0%BB%D0%B8%D0%B4%D0%B0%D1%86%D0%B8%D1%8F_%D1%84%D0%BE%D1%80%D0%BC%D1%8B\n            />\n          </label>\n          <label className={inputLabel} htmlFor={this.numberId}>\n            Number:\n            <input\n              className={input}\n              type=\"text\"\n              placeholder=\" +380-XX-...\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n              id={this.numberId}\n              required\n            />\n          </label>\n          <button type=\"submit\" className={addBtn}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst { contactListItem, contactBtn } = styles;\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => (\n  <li key={id} className={contactListItem}>\n    <p>\n      {name}: {number}\n    </p>\n    <button\n      type=\"button\"\n      onClick={() => onDeleteContact(id)}\n      className={contactBtn}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from './ContactListItem';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst { contactList } = styles;\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <>\n    <ul className={contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  </>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactFilter.module.css';\n\nconst { titleForm, inputForm } = styles;\n\nconst ContactFilter = ({ value, onChangeFilter }) => (\n  <>\n    <p className={titleForm}>Find contacts by name</p>\n    <input\n      className={inputForm}\n      type=\"text\"\n      placeholder=\"Search..\"\n      value={value}\n      onChange={({ target }) => onChangeFilter(target.value)}\n    ></input>\n  </>\n);\n\nContactFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst { section, sectionTitle } = styles;\n\nconst Section = ({ title, children }) => (\n  <section className={section}>\n    <h2 className={sectionTitle}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ msg }) => (\n  <>\n    <p>{msg}</p>\n  </>\n);\n\nNotification.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport PhonebookForm from './PhonebookForm';\nimport ContactList from './ContactList';\nimport ContactFilter from './ContactFilter';\nimport Section from './Section';\nimport Notification from './Notification';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nexport default class App extends Component {\n  static defaultProps = {\n    contacts: [],\n    filter: '',\n  };\n\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n    filter: PropTypes.string.isRequired,\n  };\n\n  state = {\n    contacts: this.props.contacts,\n    filter: this.props.filter,\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem('contacts');\n\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts),\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.getItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  // addContact = (newName, newNumber) => {\n  //   console.log(newName, newNumber);\n  //   const newContact = {\n  //     id: uuidv4(),\n  //     name: newName,\n  //     number: newNumber,\n  //   };\n\n  //   if (this.state.contacts.some(contact => contact.name === newName)) {\n  //     alert(`${newName} is already in contacts.`);\n  //     return;\n  //   }\n  //   this.setState(prevState => {\n  //     return {\n  //       contacts: [...prevState.contacts, newContact],\n  //     };\n  //   });\n  // };\n\n  addContact = newContact => {\n    const { name, number } = newContact;\n    // console.log(newContact);\n    // Can use one param, because was written this.props.onAddContact(this.state) - all state, included name/number\n    const { contacts } = this.state;\n    const theContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, theContact],\n      };\n    });\n  };\n\n  // Checking...\n  // addContact = (newContact, newNumber) => {\n  //   console.log(newContact);\n  //   console.log(newNumber);\n  // };\n\n  deleteContact = contactId => {\n    this.setState(prevState => {\n      const { contacts } = prevState;\n\n      return {\n        contacts: contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getContactsByFilter = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n  // the same with destr\n  // getContactsByFilter = () => {\n  //   const { contacts, filter } = this.state;\n  //   return contacts.filter(({ name }) =>\n  //     name.toLowerCase().included(filter.toLowerCase()),\n  //   );\n  // };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const contactsWithFilter = this.getContactsByFilter();\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <PhonebookForm onAddContact={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length > 1 && (\n            <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\n          )}\n          {contacts.length < 1 ? (\n            <Notification msg=\"The contact wasn't added\" />\n          ) : (\n            <ContactList\n              contacts={contactsWithFilter}\n              onDeleteContact={this.deleteContact}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleForm\":\"ContactFilter_titleForm__236dd\",\"inputForm\":\"ContactFilter_inputForm__3A37S\"};"],"sourceRoot":""}